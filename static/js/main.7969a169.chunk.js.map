{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","btn","lineHeight","App","classes","methods","setMethods","useState","bodyType","setBodyType","jsonBody","setJsonBody","customFields","setCustomFields","state","setState","curl_command_text","http_method","body_type","uri","is_json","is_json_valid","is_accept_selfsigned","is_verbose","custom_headers","key","value","curlCommandText","setCurlCommandText","useEffect","buildCommand","handleChange","event","name","target","toLowerCase","handleChangeCb","checked","console","log","handleChangeHeader","index","handleChangeField","custom_fields","curl_command_string","length","JSON","stringify","parse","str","React","createElement","Container","Card","variant","CardContent","CardHeader","title","className","FormControl","fullWidth","InputLabel","htmlFor","Select","native","onChange","label","inputProps","id","map","method","TextField","FormControlLabel","control","Checkbox","color","Button","onClick","addCustomHeader","push","ch","e","button","startIcon","DeleteIcon","splice","removeCustomHeader","addCustomField","TextareaAutosize","aria-label","rowsMin","json_body","placeholder","Alert","severity","Fragment","cf","removeCustomField","readonly","alert","copy","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.7969a169.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport TextField from '@material-ui/core/TextField';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\nimport Alert from '@material-ui/lab/Alert';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport copy from \"copy-to-clipboard\";  \n\nconst useStyles = makeStyles((theme) => ({\n\tformControl: {\n\t\tmargin: theme.spacing(1),\n\t\tminWidth: 170,\n\t},\n\tbtn: {\n\t\tlineHeight: 4\n\t}\n}));\n\nexport default function App() {\n\tconst classes = useStyles();\n\tconst [methods, setMethods] = useState([]);\n\tconst [bodyType, setBodyType] = useState([]);\n\tconst [jsonBody, setJsonBody] = useState(\"\");\n\tconst [customFields, setCustomFields] = useState([]);\n\tconst [state, setState] = useState({\n\t\tcurl_command_text: \"\",\n\t\thttp_method: \"-\",\n\t\tbody_type: \"-\",\n\t\turi: \"https://reqres.in/api/users/5\",\n\t\tis_json: false,\n\t\tis_json_valid: true,\n\t\tis_accept_selfsigned : false,\n\t\tis_verbose: false,\n\t\tcustom_headers: [{\n\t\t\tkey : \"Authorization\",\n\t\t\tvalue : \"Bearer xxx\"\n\t\t}]\n\t});\n\tconst [curlCommandText, setCurlCommandText] = useState(\"curl\");\n\n\tuseEffect(() => {\n\t\tsetMethods(['GET', 'POST', 'PUT', 'PATCH', 'DELETE'])\n\t\tsetBodyType(['JSON', 'FORM DATA', 'FORM URLENCODED'])\n\t\tbuildCommand()\n\t}, [state])\n\n\tconst resetCustomFields = () => {\n\t\tsetState({\n\t\t\t...state,\n\t\t\tis_json_valid: true,\n\t\t});\n\n\t\tsetJsonBody(\"\")\n\t\tif (state.body_type.toLowerCase() === \"json\") {\n\t\t\tsetCustomFields([])\n\t\t}\n\t\tbuildCommand();\n\t  }\n\n\tconst jsonChecker = (event) => {\n\t\ttry {\n\t\t\tlet json_body = JSON.stringify(JSON.parse(event.target.value), null, 4);\n\t\t\tsetJsonBody(json_body)\n\t\t\tsetState({\n\t\t\t\t...state,\n\t\t\t\tis_json_valid: true\n\t\t\t});\n\t\t\tbuildCommand();\n\t\t} catch (e) {\n\t\t\tsetJsonBody(event.target.value)\n\t\t\tsetState({\n\t\t\t\t...state,\n\t\t\t\tis_json_valid: false\n\t\t\t});\n\t\t}\n\t}\n\n\tconst handleChange = (event) => {\n\t\tconst name = event.target.name;\n\t\tif (name === \"body_type\"){\n\t\t\tresetCustomFields()\n\t\t}\n\t\tsetState({\n\t\t\t...state,\n\t\t\t[name]: event.target.value,\n\t\t});\n\t\tbuildCommand()\n\t};\n\n\tconst handleChangeCb = (event) => {\n\t\tconst name = event.target.name;\n\t\tsetState({\n\t\t\t...state,\n\t\t\t[name]: event.target.checked,\n\t\t});\n\t\tconsole.log(\"cb change\", state[name])\n\t\tbuildCommand()\n\t\tconsole.log(\"cb change done\", event.target.checked)\n\t};\n\n\tconst addCustomHeader = () => {\n\t\tstate.custom_headers.push({\n\t\t\tkey: \"\",\n\t\t\tvalue: \"\",\n\t\t});\n\n\t\tsetState({...state});\n\t\tbuildCommand()\n\t}\n\n\tconst handleChangeHeader = (event, index) => {\n\t\tconst { name, value } = event.target;\n\t\tconst custom_headers = [...state.custom_headers];\n\t\tcustom_headers[index][name] = value;\n\t\tsetState({...state, custom_headers: custom_headers});\n\t\tbuildCommand()\n\t}\n\n\tconst removeCustomHeader = (index) => {\n\t\tconst custom_headers = [...state.custom_headers];\n\t\tcustom_headers.splice(index, 1);\n\t\tsetState({...state, custom_headers: custom_headers});\n\t\tbuildCommand()\n\t}\n\n\tconst addCustomField = () => {\n\t\tsetCustomFields([...customFields, { key: \"\", value: \"\" }]);\n\t\tbuildCommand()\n\t}\n\n\tconst handleChangeField = (event, index) => {\n\t\tconst { name, value } = event.target;\n\t\tconst custom_fields = [...customFields];\n\t\tcustom_fields[index][name] = value;\n\t\tsetCustomFields(custom_fields);\n\t\tbuildCommand()\n\t}\n\n\tconst removeCustomField = (index) => {\n\t\tconst custom_fields = [...customFields];\n\t\tcustom_fields.splice(index, 1);\n\t\tsetCustomFields(custom_fields);\n\t\tbuildCommand()\n\t}\n\n\tconst buildCommand = () => {\n\t\tlet curl_command_string = \"curl\";\n\t\tif (state.is_verbose) {\n\t\t\tcurl_command_string = curl_command_string + \" -v\";\n\t\t}\n\n\t\tif (state.is_accept_selfsigned) {\n\t\t\tcurl_command_string = curl_command_string + \" --insecure\";\n\t\t}\n\n\t\tif (state.http_method !== \"-\" && state.http_method !== \"\") {\n\t\t\tcurl_command_string = curl_command_string + \" --location --request \" + state.http_method;\n\t\t}\n\n\t\tif (state.is_json) {\n\t\t\tif (state.body_type.toLowerCase() === \"json\") {\n\t\t\t\tcurl_command_string = curl_command_string + ' --header \"Content-type: application/json\"';\n\t\t\t}\n\t\t}\n\n\t\tif (state.custom_headers.length > 0) {\n\t\t\tlet custom_headers = state.custom_headers;\n\t\t\tfor (let index = 0; index < custom_headers.length; index++) {\n\t\t\t\tif (custom_headers[index].key !== \"\" && custom_headers[index].value !== \"\") {\n\t\t\t\t\tcurl_command_string = curl_command_string + ' --header \"' + custom_headers[index].key + \": \" + custom_headers[index].value + '\" ';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (state.body_type.toLowerCase() === \"json\" && state.is_json_valid && jsonBody !== \"\") {\n\t\t\tlet json_body = JSON.stringify(JSON.parse(jsonBody));\n\t\t\tcurl_command_string = curl_command_string + \" --data-raw '\" + json_body + \"'\";\n\t\t}\n\t\n\t\tif (state.body_type.toLowerCase() === \"form urlencoded\" && customFields.length !== 0) {\n\t\t\tlet str = \"\";\n\t\t\tconsole.log(state.body_type.toLowerCase(), customFields)\n\t\t\tfor (let index = 0; index < customFields.length; index++) {\n\t\t\t\tif (customFields[index].key !== \"\" && customFields[index].value !== \"\") {\n\t\t\t\t\tif (str !== \"\") {\n\t\t\t\t\t\tstr += \"&\";\n\t\t\t\t\t}\n\t\t\t\t\tstr +=\n\t\t\t\t\t\tcustomFields[index].key +\n\t\t\t\t\t\t\"=\" +\n\t\t\t\t\t\tcustomFields[index].value;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcurl_command_string =\n\t\t\t\tcurl_command_string + \" --data-urlencode '\" + str + \"'\";\n\t\t\tcurl_command_string =\n\t\t\t\tcurl_command_string +\n\t\t\t\t' --header \"Content-Type: application/x-www-form-urlencoded\"';\n\t\t}\n\n\t\tif (state.body_type.toLowerCase() === \"form data\" && customFields.length !== 0) {\n\t\t\tfor (let index = 0; index < customFields.length; index++) {\n\t\t\t\tif (customFields[index].key !== \"\" && customFields[index].value !== \"\") {\n\t\t\t\t\tlet str = \" --form '\" + customFields[index].key + \"=\" + customFields[index].value + \"' \";\n\t\t\t\t\tcurl_command_string = curl_command_string + str;\n\t\t\t\t\tcurl_command_string = curl_command_string + ' --header \"Content-Type: multipart/form-data\"';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (state.uri !== \"\") {\n\t\t\tcurl_command_string = curl_command_string + \" '\" + state.uri + \"'\";\n\t\t}\n\n\t\tsetCurlCommandText(curl_command_string);\n\t}\n\n  return (\n\t<Container>\n\t\t<Card variant=\"outlined\">\n\t\t\t<CardContent>\n\t\t\t\t<CardHeader\n\t\t\t\t\ttitle=\"CURL Command Builder\"\n\t\t\t\t/>\n\t\t\t\t<div className=\"container-fluid\">\n\t\t\t\t\t<Card variant=\"outlined\" className=\"mt-2\">\n\t\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t\t<div className=\"col-md-3\">\n\t\t\t\t\t\t\t\t\t<FormControl fullWidth variant=\"outlined\" className={classes.formControl}>\n\t\t\t\t\t\t\t\t\t\t<InputLabel htmlFor=\"outlined-age-native-simple\">Request Method</InputLabel>\n\t\t\t\t\t\t\t\t\t\t<Select native value={state.http_method} onChange={handleChange} label=\"Request Method\" inputProps={{\n\t\t\t\t\t\t\t\t\t\t\tname: 'http_method',\n\t\t\t\t\t\t\t\t\t\t\tid: 'outlined-age-native-simple',\n\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"-\">--- HTTP METHOD ---</option>\n\t\t\t\t\t\t\t\t\t\t\t{methods.map((method, index) => {\n\t\t\t\t\t\t\t\t\t\t\t\treturn <option key={index} value={method}>{method}</option>\n\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"col-md-9\">\n\t\t\t\t\t\t\t\t\t<FormControl fullWidth variant=\"outlined\" className={classes.formControl} onChange={handleChange}>\n\t\t\t\t\t\t\t\t\t\t<TextField name=\"uri\" id=\"outlined-basic\" label=\"URI\" variant=\"outlined\" value={state.uri} />\n\t\t\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t</Card>\n\n\t\t\t\t\t<Card variant=\"outlined\" className=\"mt-2\">\n\t\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t\t<div className=\"row text-center mt-3\">\n\t\t\t\t\t\t\t\t<div className=\"col-md-3\">\n\t\t\t\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\t\t\t\tcontrol={\n\t\t\t\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\t\t\t\tchecked={state.is_json}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChangeCb}\n\t\t\t\t\t\t\t\t\t\t\tname=\"is_json\"\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tlabel=\"JSON Content-Type\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"col-md-3\">\n\t\t\t\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\t\t\t\tcontrol={\n\t\t\t\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\t\t\t\tchecked={state.is_accept_selfsigned}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChangeCb}\n\t\t\t\t\t\t\t\t\t\t\tname=\"is_accept_selfsigned\"\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tlabel=\"Accept self-signed certs\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"col-md-3\">\n\t\t\t\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\t\t\t\tcontrol={\n\t\t\t\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\t\t\t\tchecked={state.is_verbose}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChangeCb}\n\t\t\t\t\t\t\t\t\t\t\tname=\"is_verbose\"\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tlabel=\"Verbose\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"col-md-3 \">\n\t\t\t\t\t\t\t\t\t<Button variant=\"contained\" color=\"primary\" onClick={addCustomHeader}>\n\t\t\t\t\t\t\t\t\t\tAdd Custom Header\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t{state.custom_headers.map((ch, index) => {\n\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<div className=\"row text-center\" key={index}>\n\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-5\">\n\t\t\t\t\t\t\t\t\t\t\t<FormControl fullWidth variant=\"outlined\" className={classes.formControl} onChange={(e) => handleChangeHeader(e, index)}>\n\t\t\t\t\t\t\t\t\t\t\t\t<TextField name=\"key\" id=\"outlined-basic\" label=\"Key\" variant=\"outlined\" value={ch.key} />\n\t\t\t\t\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-5\">\n\t\t\t\t\t\t\t\t\t\t\t<FormControl fullWidth variant=\"outlined\" className={classes.formControl} onChange={(e) => handleChangeHeader(e, index)}>\n\t\t\t\t\t\t\t\t\t\t\t\t<TextField name=\"value\" id=\"outlined-basic\" label=\"Value\" variant=\"outlined\" value={ch.value} />\n\t\t\t\t\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className={\"col-md-2 \"+classes.btn}>\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\t\t\t\t\t\t\tstartIcon={<DeleteIcon />}\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => removeCustomHeader(index)}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tDelete\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t</Card>\n\n\t\t\t\t\t<Card variant=\"outlined\" className=\"mt-2\">\n\t\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t\t<FormControl className=\"col-md-3\" variant=\"outlined\" className={classes.formControl}>\n\t\t\t\t\t\t\t\t<InputLabel htmlFor=\"outlined-age-native-simple\">Body Type</InputLabel>\n\t\t\t\t\t\t\t\t<Select native value={state.body_type} onChange={handleChange} label=\"Body Type\" inputProps={{\n\t\t\t\t\t\t\t\t\tname: 'body_type',\n\t\t\t\t\t\t\t\t\tid: 'outlined-age-native-simple',\n\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t<option value=\"-\">--- BODY TYPE ---</option>\n\t\t\t\t\t\t\t\t\t{bodyType.map((body_type, index) => {\n\t\t\t\t\t\t\t\t\t\treturn <option key={index} value={body_type}>{body_type}</option>\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t\t{(state.body_type.toLowerCase() === 'form data' || state.body_type.toLowerCase() === 'form urlencoded') &&\n\t\t\t\t\t\t\t<Button className={classes.btn}\n\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\tonClick={addCustomField}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tAdd Custom Field\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t{state.body_type.toLowerCase() === 'json' && state.body_type.toLowerCase() !== '' &&\n\t\t\t\t\t\t\t<FormControl fullWidth variant=\"outlined\" className={classes.formControl}>\n\t\t\t\t\t\t\t\t<TextareaAutosize name=\"json_body\" className=\"form-control\" aria-label=\"json\" rowsMin={10} onChange={jsonChecker} placeholder=\"JSON\" value={state.json_body} />\n\t\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\t\t{!state.is_json_valid &&\n\t\t\t\t\t\t\t\t<Alert severity=\"error\">Wadaaw! Invalid json format.</Alert>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t{(state.body_type.toLowerCase() === 'form data' || state.body_type.toLowerCase() === 'form urlencoded') &&\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t{customFields.map((cf, index) => {\n\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<div className=\"row text-center\" key={index}>\n\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-5\">\n\t\t\t\t\t\t\t\t\t\t\t<FormControl fullWidth variant=\"outlined\" className={classes.formControl} onChange={(e) => handleChangeField(e, index)}>\n\t\t\t\t\t\t\t\t\t\t\t\t<TextField name=\"key\" id=\"outlined-basic\" label=\"Key\" variant=\"outlined\" value={cf.key} />\n\t\t\t\t\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-5\">\n\t\t\t\t\t\t\t\t\t\t\t<FormControl fullWidth variant=\"outlined\" className={classes.formControl} onChange={(e) => handleChangeField(e, index)}>\n\t\t\t\t\t\t\t\t\t\t\t\t<TextField name=\"value\" id=\"outlined-basic\" label=\"Value\" variant=\"outlined\" value={cf.value} />\n\t\t\t\t\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className={\"col-md-2 \"+classes.btn}>\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\t\t\t\t\t\t\tstartIcon={<DeleteIcon />}\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => removeCustomField(index)}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tDelete\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t</Card>\n\n\t\t\t\t\t<Card variant=\"outlined\" className=\"mt-2\">\n\t\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t\t<FormControl fullWidth variant=\"outlined\" className={classes.formControl}>\n\t\t\t\t\t\t\t\tResult :\n\t\t\t\t\t\t\t\t<TextareaAutosize readonly className=\"form-control\" aria-label=\"json\" rowsMin={3} placeholder=\"JSON\" value={curlCommandText}/>\n\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\tclassName={\"mt-2 \"+classes.button}\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\talert(\"Copied! => \"+curlCommandText)\n\t\t\t\t\t\t\t\t\t\tcopy(curlCommandText)\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tCopy to clipboard\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</FormControl>\n\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t</Card>\n\t\t\t\t</div>\n\t\t\t</CardContent>\n\t\t</Card>\n\t\t</Container>\n\t);\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}